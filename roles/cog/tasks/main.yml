
- name: Install required libraries for CoG
  package:
    name:
      - httpd-devel
      - sqlite-devel

- name: Clone CoG Repo
  git:
    repo: "{{ cog.repo }}"
    dest: "{{ cog.dest }}"
    version: "{{ cog.version }}"
  register: cog_clone

- name: Create CoG conda env
  command: "{{ conda.exe }} create -y -n cog 'python<3' pip"
  args:
    creates: "{{ conda.envs }}/cog"
  register: cog_env

- name: Install CoG Requirments
  shell: >
    {{ conda.actv }} cog && \
    pip install 'mod_wsgi<4.6' 'git+https://github.com/EarthSystemCoG/django-openid-auth.git#egg=django-openid-auth' -r requirements.txt
  args:
    chdir: "{{ cog.dest }}"

# Install mkproxy
- name: Clone Transfer API Client Repo
  git:
    repo: "https://github.com/globusonline/transfer-api-client-python.git"
    dest: "{{ cog.base }}/transfer-api-client-python"

- name: Make and Install mkproxy
  shell: >
    {{ conda.actv }} cog && \
    make && make install
  args:
    chdir: "{{ cog.base }}/transfer-api-client-python/mkproxy"

- name: Install CoG into conda env
  shell: >
    {{ conda.actv }} cog && \
    python setup.py --quiet develop
  args:
    chdir: "{{ cog.dest }}"

- name: Setup CoG
  shell: >
    {{ conda.actv }} cog && \
    python setup.py setup_cog --esgf=true
  args:
    chdir: "{{ cog.dest }}"

- name: CoG collectstatic
  shell: >
    {{ conda.actv }} cog && \
    python manage.py collectstatic --no-input
  args:
    chdir: "{{ cog.dest }}"

- name: Copy wsgi to python path location
  copy:
    remote_src: yes
    src: "{{ cog.dest }}/apache/wsgi.py"
    dest: "{{ cog.dest }}/wsgi.py"

- name: Install application with waitress
  include_role:
    name: waitress
  vars:
    application_name: cog
    application_user: apache
    application_port: 8889
    application_wsgi_app:
      - wsgi
      - application

- name: Set Ownership
  file:
    path: "{{ cog.base }}"
    owner: apache
    group: apache
    recurse: yes
